# Root logger option - if you need more info go with DEBUG
log4j.rootLogger=INFO, file, stdout

log4j.logger.io.vertx.core = ERROR
log4j.logger.org.apache.log4j.Logger = ERROR
log4j.logger.io.netty = ERROR
log4j.logger.com.mchange = ERROR
log4j.logger.hsqldb.db=WARN


# Direct log messages to a log file
log4j.appender.file=org.apache.log4j.RollingFileAppender

log4j.appender.file.File=logs/log-analyser.log
log4j.appender.file.MaxFileSize=15MB
log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [%-5p] %C{1}:%L - %m%n

# Direct log messages to stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] [%-5p] %C{1}:%L - %m%n




#ALL	The ALL has the lowest possible rank and is intended to turn on all logging.
#DEBUG	The DEBUG Level designates fine-grained informational events that are most useful to debug an application.
#ERROR	The ERROR level designates error events that might still allow the application to continue running.
#FATAL	The FATAL level designates very severe error events that will presumably lead the application to abort.
#INFO	The INFO level designates informational messages that highlight the progress of the application at coarse-grained level.
#OFF	The OFF has the highest possible rank and is intended to turn off logging.
#TRACE	The TRACE Level designates finer-grained informational events than the DEBUG
#WARN	The WARN level designates potentially harmful situations.
